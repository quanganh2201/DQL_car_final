<?xml version="1.0"?>
<robot name="two_wheeled_robot">
  
  <!-- ****************** ROBOT CONSTANTS *******************************  -->
  <!-- Define the size of the robot's main chassis in meters -->
  <!-- Base dimensions: width=0.39, length=0.70, height=0.20 -->
  
  <!-- Define the shape of the robot's two back wheels in meters -->
  <!-- Wheel dimensions: radius=0.14, width=0.06 -->

  <!-- Position the wheels and caster along the axes -->
  <!-- Wheel positions: ygap=0.035, zoff=0.05, xoff=0.221 -->
  <!-- Caster position: xoff=0.217 -->

  <!-- ********************** ROBOT BASE *********************************  -->
  <link name="base_link">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="0.35 0.195 0.10"/>
      </geometry>
      <material name="Red">
        <color rgba="1.0 0.0 0.0 1.0"/>
      </material>
    </visual>
 
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="0.35 0.195 0.10"/>
      </geometry>
    </collision>
 
    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <mass value="7.5"/>
      <inertia ixx="0.6043333333333334" ixy="0.0" ixz="0.0" iyy="0.6043333333333334" iyz="0.0" izz="2.2875"/>
    </inertial>
  </link>
 
  <gazebo reference="base_link">
    <material>Gazebo/Red</material>
  </gazebo>
 
  <!-- ****************** ROBOT BASE FOOTPRINT ***************************  -->
  <link name="base_footprint">
    <inertial>
      <mass value="0"/>
      <inertia ixx="0" ixy="0" ixz="0" iyy="0" iyz="0" izz="0"/>
    </inertial>
  </link>
 
  <joint name="base_joint" type="fixed">
    <parent link="base_link"/>
    <child link="base_footprint"/>
    <origin xyz="0.0 0.0 -0.10" rpy="0 0 0"/>
  </joint>
 
  <!-- *********************** DRIVE WHEELS ******************************  -->
  <link name="drivewhl_l_link">
    <visual>
      <origin xyz="0 0 0" rpy="1.5707963267949 0 0"/>
      <geometry>
        <cylinder radius="0.07" length="0.03"/>
      </geometry>
      <material name="Gray">
        <color rgba="0.5 0.5 0.5 1.0"/>
      </material>
    </visual>
 
    <collision>
      <origin xyz="0 0 0" rpy="1.5707963267949 0 0"/>
      <geometry>
        <cylinder radius="0.07" length="0.03"/>
      </geometry>
    </collision>
 
    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <mass value="0.5"/>
      <inertia ixx="0.007641666666666666" ixy="0" ixz="0" iyy="0.007641666666666666" iyz="0" izz="0.0049"/>
    </inertial>
  </link>
 
  <joint name="drivewhl_l_joint" type="continuous">
    <parent link="base_link"/>
    <child link="drivewhl_l_link"/>
    <origin xyz="-0.09 0.111 -0.05" rpy="0 0 0"/>
    <axis xyz="0 1 0"/>
  </joint>
 
  <link name="drivewhl_r_link">
    <visual>
      <origin xyz="0 0 0" rpy="1.5707963267949 0 0"/>
      <geometry>
        <cylinder radius="0.07" length="0.03"/>
      </geometry>
      <material name="Gray">
        <color rgba="0.5 0.5 0.5 1.0"/>
      </material>
    </visual>
 
    <collision>
      <origin xyz="0 0 0" rpy="1.5707963267949 0 0"/>
      <geometry>
        <cylinder radius="0.07" length="0.03"/>
      </geometry>
    </collision>
 
    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <mass value="0.5"/>
      <inertia ixx="0.007641666666666666" ixy="0" ixz="0" iyy="0.007641666666666666" iyz="0" izz="0.0049"/>
    </inertial>
  </link>
 
  <joint name="drivewhl_r_joint" type="continuous">
    <parent link="base_link"/>
    <child link="drivewhl_r_link"/>
    <origin xyz="-0.09 -0.111 -0.05" rpy="0 0 0"/>
    <axis xyz="0 1 0"/>
  </joint>
 
  <!-- *********************** CASTER WHEEL ******************************  -->
  <link name="front_caster">
    <visual>
      <geometry>
        <sphere radius="0.0325"/>
      </geometry>
      <material name="Cyan">
        <color rgba="0 1.0 1.0 1.0"/>
      </material>
    </visual>
 
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <sphere radius="0.0325"/>
      </geometry>
    </collision>
 
    <inertial>
      <mass value="0.5"/>
      <inertia ixx="0.000169" ixy="0.0" ixz="0.0" iyy="0.000169" iyz="0.0" izz="0.000169"/>
    </inertial>
  </link>
   
  <gazebo reference="front_caster">
    <mu1>0.01</mu1>
    <mu2>0.01</mu2>
    <material>Gazebo/White</material>
  </gazebo>
 
  <joint name="caster_joint" type="fixed">
    <parent link="base_link"/>
    <child link="front_caster"/>
    <origin xyz="0.1 0.0 -0.1" rpy="0 0 0"/>
  </joint>
 
  <!-- *********************** IMU SETUP *********************************  -->
  <!-- link name="imu_link">
    <visual>
      <geometry>
        <box size="0.1 0.1 0.1"/>
      </geometry>
    </visual>
     
    <collision>
      <geometry>
        <box size="0.1 0.1 0.1"/>
      </geometry>
    </collision>
       
    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <mass value="0.1"/>
      <inertia ixx="0.00016666666666666666" ixy="0.0" ixz="0.0" iyy="0.00016666666666666666" iyz="0.0" izz="0.00016666666666666666"/>
    </inertial>
  </link>
     
  <joint name="imu_joint" type="fixed">
    <parent link="base_link"/>
    <child link="imu_link"/>
    <origin xyz="0 0 0.01"/>
  </joint>
     
  <gazebo reference="imu_link">
    <gravity>true</gravity>
    <sensor name="twr_imu" type="imu">
      <always_on>true</always_on>
      <update_rate>100</update_rate>
      <visualize>true</visualize>
      <imu>
        <orientation>
          <x>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>2e-3</stddev>
            </noise>
          </x>
          <y>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>2e-3</stddev>
            </noise>
          </y>
          <z>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>2e-3</stddev>
            </noise>
          </z>
        </orientation>
        <angular_velocity>
          <x>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>4.0e-3</stddev>
            </noise>
          </x>
          <y>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>4.0e-3</stddev>
            </noise>
          </y>
          <z>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>4.0e-3</stddev>
            </noise>
          </z>
        </angular_velocity>
        <linear_acceleration>
          <x>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>4.9e-3</stddev>
            </noise>
          </x>
          <y>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>4.9e-3</stddev>
            </noise>
          </y>
          <z>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>4.9e-3</stddev>
            </noise>
          </z>
        </linear_acceleration>
      </imu>
    </sensor>
  </gazebo -->

  <!-- *********************** LIDAR SETUP **********************************  -->
 <!-- link name="lidar_link">
    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <mass value="0.125"/>
      <inertia ixx="0.001"  ixy="0"  ixz="0" iyy="0.001" iyz="0" izz="0.001" />
    </inertial>
 
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
         <cylinder radius="0.0508" length="0.75"/>
      </geometry>
    </collision>
 
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
         <cylinder radius="0.0508" length="0.04"/>
      </geometry>
    </visual>
  </link>
     
  <joint name="lidar_joint" type="fixed">
    <parent link="base_link"/>
    <child link="lidar_link"/>
    <origin xyz="0.215 0.0 0.2" rpy="0 0 0"/>
  </joint>
     
  <gazebo reference="lidar_link">
    <sensor name="lidar" type="ray">
      <always_on>true</always_on>
      <visualize>true</visualize>
      <update_rate>5</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>120</samples>
            <resolution>1.000000</resolution>
            <min_angle>-3.14159</min_angle>
            <max_angle>3.14159</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.3</min>
          <max>15.0</max>
          <resolution>0.015</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="scan" filename="libgazebo_ros_ray_sensor.so">
        <ros>
          <remapping>~/out:=scan</remapping>
        </ros>
        <output_type>sensor_msgs/LaserScan</output_type>
        <frame_name>lidar_link</frame_name>
      </plugin>
    </sensor>
  </gazebo>
  <gazebo reference="lidar_link">
    <mu1>0.01</mu1>
    <mu2>0.01</mu2>
    <material>Gazebo/Black</material>
  </gazebo -->

<!-- *********************** DEPTH CAMERA ******************************  -->
<!-- The depth camera (e.g. Intel Realsense camera). -->

<link name="camera_link">
    <visual>
        <geometry>
            <box size="0.010 0.03 0.03"/>
        </geometry>
    </visual>
</link>

<joint name="camera_joint" type="fixed">
    <parent link="front_caster"/>
    <child link="camera_link"/>
    <origin xyz="0.0 0 0.2" rpy="0 0 0"/>
</joint>

<joint name="camera_optical_joint" type="fixed">
    <origin xyz="0 0 0" rpy="-1.58 0 1.58" />
    <parent link="camera_link" />
    <child link="camera_link_optical" />
</joint>

<link name="camera_link_optical"></link>

<gazebo reference="camera_link">
    <material>Gazebo/Red</material>
    <sensor name="depth_camera" type="depth">
    <pose> 0 0 0 0 0 0 </pose>
    <always_on>true</always_on>
    <visualize>true</visualize>
    <update_rate>10</update_rate>
    <camera name="camera">
      <horizontal_fov>1.5</horizontal_fov>
      <image>
        <width>640</width>
        <height>480</height>
        <format>R8G8B8</format>
      </image>
      <clip>
        <near>0.02</near>
        <far>10</far>
      </clip>
      <noise>
        <type>gaussian</type>
        <mean>0.0</mean>
        <stddev>0.007</stddev>
      </noise>
    </camera>
    <plugin name="depth_camera_controller" filename="libgazebo_ros_camera.so">
      <camera_name>camera_link</camera_name>
      <frame_name>camera_link_optical</frame_name>
      <hack_baseline>0</hack_baseline>
      <min_depth>0.001</min_depth>  
    </plugin>
  </sensor>
</gazebo>

<!-- *********************** WHEEL ODOMETRY ***************************    -->
  <gazebo>
    <plugin name="two_wheeled_robot_diff_drive" filename="libgazebo_ros_diff_drive.so">
 
      <update_rate>30</update_rate>
      
      <!-- wheels -->
      <left_joint>drivewhl_l_joint</left_joint>
      <right_joint>drivewhl_r_joint</right_joint>
 
      <!-- kinematics -->
      <wheel_separation>0.195</wheel_separation>
      <wheel_diameter>0.07</wheel_diameter>
 
      <!-- limits -->
      <max_wheel_torque>20</max_wheel_torque>
      <max_wheel_acceleration>1.0</max_wheel_acceleration>
 
      <!-- Receive velocity commands on this ROS topic -->
      <command_topic>cmd_vel</command_topic>
 
      <!-- output -->
      <!-- When false, publish no wheel odometry data to a ROS topic -->
      <publish_odom>true</publish_odom>
 
      <!-- When true, publish coordinate transform from odom to base_footprint -->
      <!-- I usually use the robot_localization package to publish this transform -->  
      <publish_odom_tf>false</publish_odom_tf>
     
      <!-- When true, publish coordinate transform from base_link to the wheels -->
      <!-- The robot_state_publisher package is often used to publish this transform -->  
      <publish_wheel_tf>true</publish_wheel_tf>
 
      <odometry_topic>odom</odometry_topic>
      <odometry_frame>odom</odometry_frame>
      <robot_base_frame>base_link</robot_base_frame>
 
      <odometry_source>1</odometry_source>
      <ros>
        <remapping>odom:=wheel/odometry</remapping>
      </ros>
    </plugin>
  </gazebo>

</robot>
